#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esg-dn1.nsc.liu.se - 2021/09/27 14:29:16
# Search URL: http://esg-dn1.nsc.liu.se/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.EC-Earth-Consortium.EC-Earth3.historical.r1i1p1f1.Omon.thetao.gn.v20200918|esg-dn2.nsc.liu.se
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://esg-dn1.nsc.liu.se/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.EC-Earth-Consortium.EC-Earth3.historical.r1i1p1f1.Omon.thetao.gn.v20200918|esg-dn2.nsc.liu.se'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185001-185012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185001-185012.nc' 'SHA256' '5110210902b14fcd685bb79f31dc589c8158c2a5c0c10ff1a14d1411eb9c0845'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185101-185112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185101-185112.nc' 'SHA256' 'ab01a7c9c0db84cab1addbbfede5fff5d1453e2b517687f5acf028fd9444bb06'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185201-185212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185201-185212.nc' 'SHA256' 'd09bcb7bb72d07a5d6fba219d5ff81f24bc5998f375c22a6468de4da4c7ce49d'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185301-185312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185301-185312.nc' 'SHA256' '7b524d9f295cf2a668d36ea2f935466c5ca751a7d891e227ff03f403340d0eab'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185401-185412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185401-185412.nc' 'SHA256' '8abcfcf2e91071a707a8cbe0d4a5829768dc5aba3671ab7c3ea53be4e26c6ee6'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185501-185512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185501-185512.nc' 'SHA256' '007f26c3a8f41bfa2e06f123436663056df8ab3d67b6df012ba67997e3b2edc7'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185601-185612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185601-185612.nc' 'SHA256' '34faf47d427617e52f0fe3c43aec3fae3a848198238f5dfe19752fb12cb389c4'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185701-185712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185701-185712.nc' 'SHA256' '8d1d6345e56e809deac373da6943356bd8c4aa55d8abe772d57957711d41416d'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185801-185812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185801-185812.nc' 'SHA256' '412f9ade87c9aef9e41f4b23b40e0c28f74e6882d02ac241897a428dbcb8c77a'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185901-185912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_185901-185912.nc' 'SHA256' '9af9e3a63e690a05185c83a835bf821e304d5e906a772842a3b6e22ce81361bb'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186001-186012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186001-186012.nc' 'SHA256' '0acb67a0a54d96a2f18e436f2b21a71b5d48889e35f1420ebc85391ef4aa2d38'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186101-186112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186101-186112.nc' 'SHA256' 'c7a82f1b20c85db1fffb7736490ba53b7085fc5f64a8e9aa22e37f28bc219a33'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186201-186212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186201-186212.nc' 'SHA256' '7f09b5e2f69948c27c2e60a2c6c964296cdf3ec5c8faa087d2bb95805b3002e9'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186301-186312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186301-186312.nc' 'SHA256' '23efae49771377b1d97ea954abc4e1f07e16460e18bb31ce4f49cb37d1bb86f6'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186401-186412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186401-186412.nc' 'SHA256' '73b3ed16517048593eca265d72b5f41a0ebb2b506c707da3ae3da539f9eb6d63'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186501-186512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186501-186512.nc' 'SHA256' '4363e730846517b1abcce94d9abb60a9f96dc9cc1c328673ed8cd5bda2414ca2'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186601-186612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186601-186612.nc' 'SHA256' '49f1cc4c2be32021382e7cd8d437df4611209602cef5a4e80297bd03348de553'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186701-186712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186701-186712.nc' 'SHA256' 'fbe079570757b16a62bbbad8a3649bf9a3592d2a4012a127ac1e8d87bb4d3f39'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186801-186812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186801-186812.nc' 'SHA256' '4bc038e023d2a30b61ddcf4185712ffe8aa080a94f1ca1ab37301bb3919e60fb'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186901-186912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_186901-186912.nc' 'SHA256' 'ce220f5e3020bd5ecfadc1e16747d79a77818df184f081ad598369955ec54a95'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187001-187012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187001-187012.nc' 'SHA256' 'e8f5221f6fe63e2397428a0c33031a8ce6651a9ebaa1a584c79db564f724625e'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187101-187112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187101-187112.nc' 'SHA256' '0df49360ebe6922895ba7800c852c349f5155414a7b8b25cfb52d3b3b26612be'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187201-187212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187201-187212.nc' 'SHA256' 'e053895498739e095db9b633f7fb983f156ef1c073b6bab0a777a79dc165cdd0'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187301-187312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187301-187312.nc' 'SHA256' 'fe0ded2476d3e37343133acdfb38d2e697d70bd60132a42421a2a83ed8889145'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187401-187412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187401-187412.nc' 'SHA256' '61051b82868f492151ac283a668d9ea64784344354f35d7be46493892cfc6d14'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187501-187512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187501-187512.nc' 'SHA256' '4c58aaa959f9559e857a4af3537c3a8e1009306c2bb337a9e175e4226bb1e1e1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187601-187612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187601-187612.nc' 'SHA256' 'ac05a3346323f8c6730a7198db3c9fd4bf6f63c1666933a1b5f43ab69bfe645c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187701-187712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187701-187712.nc' 'SHA256' '0dcd8abca4ad5e7d81192d8a958625db75389a367d933df4eb0f1af1401f5e08'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187801-187812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187801-187812.nc' 'SHA256' '5778ccb114973f80d9fcc03f1ab5d7bc9e1ca7576e9a2ef050ad971c9aa28f44'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187901-187912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_187901-187912.nc' 'SHA256' 'ad7cf3107c5f64e58bfc5954041b6a7f938c7e04253846353d1d3917b7ed8164'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188001-188012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188001-188012.nc' 'SHA256' 'a74dacedea209743a033415b8001eb1a09f2ecc94a64f31cdcaf723e8f1c4e3b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188101-188112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188101-188112.nc' 'SHA256' 'fb4c78eb97a197ca9af398c7bf4ae20f946a7a45f2a240b124c5d113b5318cdf'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188201-188212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188201-188212.nc' 'SHA256' '7e07302c8ba07d45cb2104543e5cae243232be8bcc4fd86077199c9c36e0324e'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188301-188312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188301-188312.nc' 'SHA256' '05d2c71a38eba03517b3dc15608e28eb78c77b776ea43421a67bc594030d75b2'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188401-188412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188401-188412.nc' 'SHA256' 'ab1337fa0fa594bf2aafe11e6e5474a21529ba5dd90a62740f515c7e3db4b2cd'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188501-188512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188501-188512.nc' 'SHA256' '179a313d3ccdcaa302262de39ff7413b87c1ca10aca7321cf376a7ed2603bea1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188601-188612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188601-188612.nc' 'SHA256' '7ee83329b47c9ba0d6bd6f9c35bae7fcd7a3c206dc3979a9eece2bcd8f5a3fb3'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188701-188712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188701-188712.nc' 'SHA256' 'd0d98aab8396a94a6c4f5c4ffcf0912ed9ffb4ba3967fbc67a14e6c98ed3394c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188801-188812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188801-188812.nc' 'SHA256' 'c99a001037ce8f3d785bc6823623c8c6642e21e5e47bd2d2a04ff0c84a85bcd5'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188901-188912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_188901-188912.nc' 'SHA256' '562fd6b2e3eebfc12ce6c8d2f34d2f3dad7cd675e6f527cb415d622fb3aa8d30'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189001-189012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189001-189012.nc' 'SHA256' '980dc5ad76735269a5bbed947fb128aa67e56634099a5fa7971461d462ff121b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189101-189112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189101-189112.nc' 'SHA256' 'c42b4d34d91958b774ef0ac9d23ccf6c6b9c464985e4bf730e3706ca7de703bd'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189201-189212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189201-189212.nc' 'SHA256' '345219b8047f0edaca748ebe24c730f15fbc23a9bdef249aa03b41b68838f486'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189301-189312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189301-189312.nc' 'SHA256' 'abd9a9b7cddb47fdbb3f8f019957fa14ab5238cddb2ac46e56c106705f5c4621'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189401-189412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189401-189412.nc' 'SHA256' '0c98959d949fd94eb66084bbcb0425a7acc7b4421dfac38c4de85b513a6cee48'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189501-189512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189501-189512.nc' 'SHA256' 'd3ad569e0031a155965a896856592540bd0655d662d145126390ac4fe3bdcafb'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189601-189612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189601-189612.nc' 'SHA256' '6fa171bb6c2aa2d6daab81324ffe0424412133386150c28d42115d9bd20db49c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189701-189712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189701-189712.nc' 'SHA256' '739055ea0b36814622a6cef357f3f706d41f3797d1643e31bb934384ef5eab31'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189801-189812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189801-189812.nc' 'SHA256' '2bc454f665b5f0c36f755c3a70b7908f47eab3b7ade15cb6cbc49a2f4aeb8e85'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189901-189912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_189901-189912.nc' 'SHA256' 'ea70645a5f2fb7d4d1f0e9ef414bb350b7ce881a02e7e0e1405f1f738d7a8d51'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190001-190012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190001-190012.nc' 'SHA256' '89628bc02e23e56624896b958893da25fb1d469876db43ca439827df63920ebd'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190101-190112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190101-190112.nc' 'SHA256' 'd23d68af0460e039a3480487399e5291eaba49d43742ffde77957147be6ca246'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190201-190212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190201-190212.nc' 'SHA256' '5f4f64d4af000e4aad08d64cb100da2b5bbe2cbbfaa46304fe2dd809455b8234'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190301-190312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190301-190312.nc' 'SHA256' '1a931ffdec5f4c31a419511a392cc5287c2577b348da8574ee60391776e0b59c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190401-190412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190401-190412.nc' 'SHA256' '3a4ebda7e45b7b2e79e9f74078090b0fc2e9cb3df5bdf892e162f8b5486bac2f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190501-190512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190501-190512.nc' 'SHA256' 'aff930f534cb4bfc799e5e0e2a3995c37730a07c656aac31a6cccbb9015ddb97'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190601-190612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190601-190612.nc' 'SHA256' 'c56e5d273bc433beaf0dcf5fdbbff63dd1873637421e2bb16b3f226b73a1796f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190701-190712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190701-190712.nc' 'SHA256' 'f5eeb7d9c74fd260531185cb83f706cfe6e3fdddfc71effd229d5bb1c7de1854'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190801-190812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190801-190812.nc' 'SHA256' '921173c9cfd078bdfae9a37328ceb76bbe310e2eb6f8e9876f3295100a5fe3cc'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190901-190912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_190901-190912.nc' 'SHA256' 'cd3eb935050efa97504a095673e7181fe589cdcf97557aabea57f5595e3d9ac1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191001-191012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191001-191012.nc' 'SHA256' '59e95bda172471fb3f9f01094caeba93ead69f58e835e1c8b8a4cd51d7572313'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191101-191112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191101-191112.nc' 'SHA256' 'c642825c2edd8c57499d688deb7d8d33a9aefe11b48882ea4857aa735dd54a0b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191201-191212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191201-191212.nc' 'SHA256' '105ccf7085b9d7660c677581d52b0e3e74ba4f58dccb3142dc477100b4dfc496'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191301-191312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191301-191312.nc' 'SHA256' '5ac9f840c15d605ca9c7a5489f514c7f3a5f5be0013c419fc7ed4d1f7d9fff7b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191401-191412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191401-191412.nc' 'SHA256' '9ea86e7aeb92b8e691cec8028308a364a0151b73d7609908ef2c460618259146'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191501-191512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191501-191512.nc' 'SHA256' '9fbf9b3ed54e19f033e2ef174f5e6842e3d3e9dd90b098a9dfc726e16bfb1289'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191601-191612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191601-191612.nc' 'SHA256' '977c9ad2d409009618ced65a070d42a7c59a96863cca892d5d62e54fba250db7'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191701-191712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191701-191712.nc' 'SHA256' 'a3623e9d4619d9e4a132da67d66cdc6956f9fc2bd66c6b49c6b7874809cf10f9'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191801-191812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191801-191812.nc' 'SHA256' 'e4b4a7be1bee32f72e927fa28137e5dc1fa553680487cbe7c434cd245c7e7982'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191901-191912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_191901-191912.nc' 'SHA256' 'd2f6a7c8e8e1586f717896ca2878295155af635b7ab04721b20f6f805270b47a'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192001-192012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192001-192012.nc' 'SHA256' 'be6afe394f7c12b178b58166ac48456f31b02c550debe26f3617451f0a3d1178'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192101-192112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192101-192112.nc' 'SHA256' 'd146597491bdf5302d2c5ede321c8b9a631027570b67dcb1aa415f02437d2f2e'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192201-192212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192201-192212.nc' 'SHA256' 'c17de70828b2ed13052a881549e6a2f576bf4b615edeb17e122a8df6557747d0'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192301-192312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192301-192312.nc' 'SHA256' '0eda93a47da2b56cbfbc5e8ddd4274117d0c9f13b493ca28572c690a3286f969'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192401-192412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192401-192412.nc' 'SHA256' '35371713bcffa43e2a8a84b579609872b39c8ad4a14a7ed6da08980c9e485af5'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192501-192512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192501-192512.nc' 'SHA256' '106a9b91e45a75756b6d2d100627d9fb00b6b502735e4ccd388a2db206a608cb'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192601-192612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192601-192612.nc' 'SHA256' '2440f600d87bb2ec93f54f59730ceeb338bbe149fd5d70b828edb6d95a97cf59'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192701-192712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192701-192712.nc' 'SHA256' '1bc65911708747ca975f89a38e8f8caea5b43f67644fb60515c11a707b71075d'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192801-192812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192801-192812.nc' 'SHA256' '2ef8f0343786c6f5de3c2cca9dd498b6bbce08b4816190f8a46612307abce731'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192901-192912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_192901-192912.nc' 'SHA256' 'ab084827d77aa0ed07705fb043486b88b859be9d404469238128ff978cf98f14'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193001-193012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193001-193012.nc' 'SHA256' '141a519a42b9d2c6369fe8d005515a3dd86bed6b479c211e274c77482688528f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193101-193112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193101-193112.nc' 'SHA256' '17bd132779ffe52d1e8d40ec590a8e3a870a348cd9d477e80b6f1d15ea0f5486'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193201-193212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193201-193212.nc' 'SHA256' '52994099cb92e750db9c055fea2128bcecd7768ab52b6bb8ad52b23cb5c45406'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193301-193312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193301-193312.nc' 'SHA256' 'efeed826b28585f46933fdaf618939e7b4356fc9b3ac3a0ff544f387272e59f9'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193401-193412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193401-193412.nc' 'SHA256' 'c9003756e12083837f8fd101f4b22ebd41e7d94d38178077bd26febabe2b139f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193501-193512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193501-193512.nc' 'SHA256' 'e198add9c187a9b404b2e0154eea60e2fa1b4d16a487feb0eab44064527ece75'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193601-193612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193601-193612.nc' 'SHA256' '495d94660d3e6d37e7e1ff54615bffb90d74192227922a420ede64d1fc564bf4'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193701-193712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193701-193712.nc' 'SHA256' 'f8ed60cd98ce6fba25a3a4d15abbeefcf509df4c6f160c037069b24bafef6b42'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193801-193812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193801-193812.nc' 'SHA256' '83a3c05dba33c0c5573f9279544bad1b7f0e4731e4a69d5470f72bc9344b6694'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193901-193912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_193901-193912.nc' 'SHA256' 'e7a01219fca730787dbe82cc17b54620a4cc5ece06a00a9165cb0faf6de97587'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194001-194012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194001-194012.nc' 'SHA256' '8ebc70d6c24c2a8c24639e50a84e7810aba29cbf5089f84d5a2fe36fa50d7d19'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194101-194112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194101-194112.nc' 'SHA256' '6a604f1a08128bec3a78b05f1f3489a71b2465ccd8496c08428f18c9424164f8'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194201-194212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194201-194212.nc' 'SHA256' '47ee67ef8ee527366676f3d42b952b373a866797343b69eb0342a2aeb0b3c031'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194301-194312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194301-194312.nc' 'SHA256' '50003d0a26947fd7cfe36d17fb7062befdb9e9491a4d0d7dc03b6b6abaec0a47'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194401-194412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194401-194412.nc' 'SHA256' 'f6e6711ddf8ad24b64fd0ed1b8ae2ef6220904f92f2bdcb0151308c2906d488a'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194501-194512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194501-194512.nc' 'SHA256' 'cdb39be690036451b1b5870cbca1e9bab1e28a97e87737cd358b4af4219ffc48'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194601-194612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194601-194612.nc' 'SHA256' 'ba3289fb313ea523a6569ec7a97c564cb532d6aaef98bac8ebb57592901586b8'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194701-194712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194701-194712.nc' 'SHA256' 'dfb3e5d950d121801f8030cd67c87ff3e73533151fde0330e7e8168ff1438804'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194801-194812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194801-194812.nc' 'SHA256' '61f9e656c06f8b1a94321706606c0ecf9da6535ff6c94c14b8d964fa967683cf'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194901-194912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_194901-194912.nc' 'SHA256' '6b777fca1371c582c84f6c6be1daa6f87a9a2fa2541860f00357901e891c0e20'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195001-195012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195001-195012.nc' 'SHA256' '1df80481bb8549e39b0dc3f56d0125541754dc684943516b098c27dcf464aaa4'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195101-195112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195101-195112.nc' 'SHA256' 'b958d180db6373e8fee4b56868a89cd11df033abde62a010464d557fd5de9dfb'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195201-195212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195201-195212.nc' 'SHA256' 'a4d540b8c738fd53274394e025c433f8caf9a09f5b2ed6e89930b729ccc7497f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195301-195312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195301-195312.nc' 'SHA256' '97efaea1de97d53d964517f48f14b677f5f70e298cbbdb22c216beb6e11ab68e'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195401-195412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195401-195412.nc' 'SHA256' '0a97af5c7e34e5469caed9785546e9ab197796dcceecfd6e24338ae28c46d4dc'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195501-195512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195501-195512.nc' 'SHA256' '3ffa0f23682d006e56a99edbb08da9606df05118c0b2eb20f120677b297d70c7'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195601-195612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195601-195612.nc' 'SHA256' 'e5f9bce1114707bab667b19448c25f1253eecf420a0a42f0e6619d7faf10b581'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195701-195712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195701-195712.nc' 'SHA256' 'e2adf8cc28235edc2585f20273e5177dcf9281bda8d4587dad11d24f6a8bbc41'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195801-195812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195801-195812.nc' 'SHA256' '84c67778428428f2eacc5e3b2392e9a1565b02c2c62423900a53a58adb2e7117'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195901-195912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_195901-195912.nc' 'SHA256' 'fbb6eb391a31e1dd66003442a95759c3d4bb97de7b0be57d1542e7670eff2be2'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196001-196012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196001-196012.nc' 'SHA256' '31ac4fc6f269ecc2d2d8b77e5064671bf003d557ecebf4d074185d3a38c6c1cd'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196101-196112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196101-196112.nc' 'SHA256' 'c31b3940e7f1576feeb2e65a3aa61cb52a9fb7c0e5ab0617c2cc26e31bfb381d'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196201-196212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196201-196212.nc' 'SHA256' 'c688354971d897ca5a5c53ffbec5e174fe7228d45f60ce0f2aed49ee71552db1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196301-196312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196301-196312.nc' 'SHA256' '19f8fe68b051a4cd3395e1f94aafee94f1316ea55af5702df24d3f2289cd1526'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196401-196412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196401-196412.nc' 'SHA256' '5a1d61bb693093e7a6e27fadcd32918a2f347bfaeaabb4878e720e46b40846ee'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196501-196512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196501-196512.nc' 'SHA256' '13b0425eeb672c8211d258814724a6e5cebac076a2920ad683b147ca4e732399'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196601-196612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196601-196612.nc' 'SHA256' '633ab4f60c455724a97d9932b0870574081fba001f000db66a216db4147ab4d0'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196701-196712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196701-196712.nc' 'SHA256' '58c08a15e64ff5cbf9c59fa21722ef0a74206b4e4f449e84d0066e39fbeca907'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196801-196812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196801-196812.nc' 'SHA256' 'f87fd6db49a7dca8cf481b5d04bedd494ed6bf29f2f258e8c08ab24943813c9d'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196901-196912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_196901-196912.nc' 'SHA256' '8d290c6360af0e26dfdd1080298f25662ef05b3e31871c75b1425e5bab7fa2af'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197001-197012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197001-197012.nc' 'SHA256' 'e8452905d6438f1900d2e95c008a579760b553a9f0f08a9ec68f10f97b83e71e'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197101-197112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197101-197112.nc' 'SHA256' '3ca5cc4794b61dfabe5dab7ceefccfa7bbf7c1687af54d831a35cf4c41251956'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197201-197212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197201-197212.nc' 'SHA256' '1bbdec7c67dfaa55a5a15b00d1b511f59cac1674b2d5c3b66e2714e9c516ace8'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197301-197312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197301-197312.nc' 'SHA256' '215a2ce47f0439109ead00e1a2f620ef1585be3a40ce8bab6312960ee13b7e03'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197401-197412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197401-197412.nc' 'SHA256' '962dbb43c4dfe9cbaef501bae94d041078b522499de3a5a80e74cb28041972fd'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197501-197512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197501-197512.nc' 'SHA256' 'f909d7ae94d1539105628993faf159b36fc150df2658920eed7c6def12de0bf9'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197601-197612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197601-197612.nc' 'SHA256' 'be6e2e7842925ddc2eeace75f41f86cecd46c8c930eb802828b184f84fe000b1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197701-197712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197701-197712.nc' 'SHA256' '5c1b8816fe08bbe606666aa5debcb22e855eb960bfc84a3b9b06a5f1d6efeb86'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197801-197812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197801-197812.nc' 'SHA256' '43e2a51b9655a2aef1899e41f774b68b4696a1ea485527bbeffc3ba05f979ac2'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197901-197912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_197901-197912.nc' 'SHA256' 'ca046d222554d374a5e8e2b33f91c9bd6dc1ccf0fe20d13659ca5105bb45add5'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198001-198012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198001-198012.nc' 'SHA256' '90c5cf7d42c92fd60694a14bb62ae951a4de591ccf8fed17ba995fe34dd7401f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198101-198112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198101-198112.nc' 'SHA256' '488e4c386d7cbde39c47a1d1a6da2414b2f6db6b826bfdf96b2123ad3f0c0ff4'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198201-198212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198201-198212.nc' 'SHA256' 'ae13fa764f9b5eca063056bc28018e7721c6ee5d66cc4973885476798713eb61'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198301-198312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198301-198312.nc' 'SHA256' '4c534613aa7f1ec79bf63e161cd9431c63883bc274b639430612e9d872c69fad'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198401-198412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198401-198412.nc' 'SHA256' 'f3fd9cebd10d0ed93e30f5ede9bf68752ed4c0ba91083c2daf894b0b30c4410f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198501-198512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198501-198512.nc' 'SHA256' 'e7b6cbb9fd5079dcf25e186f709b3cfe075720d1531a48d740a2a4a14337df6c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198601-198612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198601-198612.nc' 'SHA256' '81505cb79e1749462837c00ff042de3fbfea124f50d09e006377ac4c049a871a'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198701-198712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198701-198712.nc' 'SHA256' '136d833ac6b8f92a8797aed01027b80ba6754d2c17935b7b483d4fcfec4d4d64'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198801-198812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198801-198812.nc' 'SHA256' 'e2b27b92c7c65331dfc84e3b40f05fb7a46f73ba329a293568b939bae5421fa9'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198901-198912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_198901-198912.nc' 'SHA256' '73238946d1c2b9c68f22a71e14b47fad27135c2ab4da8bac124d986ee7e3601b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199001-199012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199001-199012.nc' 'SHA256' '96fe2482584f75e3da7bae778b0a5811d3bf634e08afe0a2ad9ddf6070373faa'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199101-199112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199101-199112.nc' 'SHA256' 'd291912285568642d18611837e38c9e8829c3ef297512b485d102e63d4bd7cc0'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199201-199212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199201-199212.nc' 'SHA256' 'bd16deb9d7043b2a39b913de14f805f3df12ed907c5b5a515cb4d5c84cdf2b86'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199301-199312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199301-199312.nc' 'SHA256' '095d3c83e4c382c8f2aa9da50361ddfae010f009cfa24a11baf48009e7c906e4'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199401-199412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199401-199412.nc' 'SHA256' 'b61c86a44fc07e2b8bbe39181aeeb4ae3bc2a9d7a46a50d9fb9fe4a59aab16d2'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199501-199512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199501-199512.nc' 'SHA256' 'f19f1ec524f2da46b7e1a7f8c0543c47c0de9f12c63adf58360f750b289aa138'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199601-199612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199601-199612.nc' 'SHA256' '0104d50a324e8d65c4ea63518d2eb77906d381df8667b004351de052406afd1c'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199701-199712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199701-199712.nc' 'SHA256' '52036a1587bc8619542fac8d19bfe77e972d429cb0a7dbb4cd91be04eb551eea'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199801-199812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199801-199812.nc' 'SHA256' 'e7f731b93f24e47cf52f33998d3b3011a5b792443e88976908ba6c53ca89fe5f'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199901-199912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_199901-199912.nc' 'SHA256' 'bd848f151c856ebbd78d54c4b693ff5418995457b0edc968263ca5697b26173b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200001-200012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200001-200012.nc' 'SHA256' '7c6ba5e53cba4225e1d5392e341847da18336a630170ac988d0c482589be0b19'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200101-200112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200101-200112.nc' 'SHA256' 'ef937ce4dbd7d0590314f11c5f6ccec621f3c871b5679a80f13e5c6dc707e739'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200201-200212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200201-200212.nc' 'SHA256' '2309f388973ba0056fcfdab12b8fb8db7c1882323105b7d5ae42c72947cf981b'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200301-200312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200301-200312.nc' 'SHA256' '90e477f9fc3a535df677d62630e5f3e103e7717f1dd3c78be2553fd62cdbc128'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200401-200412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200401-200412.nc' 'SHA256' '16e3eb7bd42a72f85744a53807dd578a3c94ae7e498a176d4b1ddd10d9cbce38'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200501-200512.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200501-200512.nc' 'SHA256' '6e3440851c49208af9ae9d044e7f7c91487de013f0a9bff15456641671475ab5'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200601-200612.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200601-200612.nc' 'SHA256' 'b1fb1c835ffc9991338adeaf16cb3df169aab072e01c6ae2365453c08a1f5081'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200701-200712.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200701-200712.nc' 'SHA256' '78af05737aa52d6c08d69a91a9adcfebfd1cdaadfb4c3775b9dd060409bc9802'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200801-200812.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200801-200812.nc' 'SHA256' '4846c14dce11a814da2e27fc60658a1d51b51bba45baf338afb120c492fe6365'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200901-200912.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_200901-200912.nc' 'SHA256' 'aa7e75994e6c896b71e2df8a14b01d36172b68de55f992401a104412a602b950'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201001-201012.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201001-201012.nc' 'SHA256' 'acc8da3e2720e8115d83071d4856192fa4353068dd84b89a8fc0e40c030887a7'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201101-201112.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201101-201112.nc' 'SHA256' '689258edf1df36c9dc2296a3f5377b8dc0829b70d28bb09d237bf5d657d38b21'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201201-201212.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201201-201212.nc' 'SHA256' '80e63c92b94b3e457f7cdd98935c18e7236502be016bbaa79c78f1b77b7468a1'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201301-201312.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201301-201312.nc' 'SHA256' 'd0393e10d1d9ca54bd4c93f4ee428297a76d05a8e5d51c44acc3201f7774ce71'
'thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201401-201412.nc' 'http://esg-dn2.nsc.liu.se/thredds/fileServer/esg_dataroot1/cmip6data/CMIP6/CMIP/EC-Earth-Consortium/EC-Earth3/historical/r1i1p1f1/Omon/thetao/gn/v20200918/thetao_Omon_EC-Earth3_historical_r1i1p1f1_gn_201401-201412.nc' 'SHA256' 'cc85695d54f81106fce766816ea1dbef85a34c0b290d56de4077349c4181c7ef'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
